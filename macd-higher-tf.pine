//@version=5
indicator(title="MACD Higher TimeFrame", shorttitle="MACD Higher TF")
// Global function
// init ma
init_ma(type, source, length) => type == 'EMA' ? ta.ema(source = source, length = length) : ta.sma(source = source, length = length)

// handle inidicator higher timeframe to fillna
int_htf_fillna(indicator) => 
    var float temp_week = na
    var float temp_day  = na

    if na(indicator) 
        temp_week := temp_day
    else
        temp_day  := indicator
        temp_week := indicator

    temp_week


higher_tf = input.timeframe(defval = '1W', title = 'Higher Timeframe')

// Input MACD Length
fast_length     = input(title="Fast Length", defval=12, group = 'MACD')
slow_length     = input(title="Slow Length", defval=26, group = 'MACD')
src             = input(title="Source", defval=close, group = 'MACD')
signal_length   = input.int(title="Signal Smoothing",  minval = 1, maxval = 50, defval = 9, group = 'MACD')
sma_source      = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"], group = 'MACD')
sma_signal      = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"], group = 'MACD')


// MACD color
col_macd       = input(#2962FF, title = "MACD Line",    group="MACD Color Settings", inline="MACD")
col_signal     = input(#FF6D00, title = "Signal Line",  group="MACD Color Settings", inline="Signal")
col_grow_above = input(#26A69A, title = "Above Grow",   group="MACD Histogram",      inline="Above")
col_fall_above = input(#B2DFDB, title = "Fall",         group="MACD Histogram",      inline="Above")
col_grow_below = input(#FFCDD2, title = "BelowGrow",    group="MACD Histogram",      inline="Below")
col_fall_below = input(#FF5252, title = "Fall",         group="MACD Histogram",      inline="Below")

// Initial MACD
fast_ma = init_ma(sma_source, src, fast_length)
slow_ma = init_ma(sma_source, src, slow_length)
macd = fast_ma - slow_ma
signal = init_ma(sma_signal, macd, signal_length)

higher_tf_macd = request.security(symbol = syminfo.tickerid, timeframe = higher_tf, expression = macd[1], gaps = barmerge.gaps_on, lookahead = barmerge.lookahead_on)
higher_tf_signal = request.security(symbol = syminfo.tickerid, timeframe = higher_tf, expression = signal[1], gaps = barmerge.gaps_on, lookahead = barmerge.lookahead_on)
higher_tf_hist = higher_tf_macd - higher_tf_signal

// fill na of higher timeframe indicators
higher_tf_hist_nona = int_htf_fillna(higher_tf_hist)

// handle styling with ducplicate value of indicator
color_handle_ducplicate_value(indicator) =>
    var color temp_color = na

    if (indicator == indicator[1])
        temp_color := temp_color
    else
        if indicator >= 0
            if indicator > indicator[1]
                temp_color := col_grow_above
            else
                temp_color := col_fall_above
        else
            if indicator > indicator[1]
                temp_color := col_grow_below
            else
                temp_color := col_fall_below
    temp_color

hist_weekly_color = color_handle_ducplicate_value(higher_tf_hist_nona)


// MACD plot
hline(0, "Zero Line", color=color.new(#787B86, 50))
plot(higher_tf_hist, title="Histogram", style=plot.style_columns, color=hist_weekly_color)
plot(higher_tf_macd, title="MACD", color=col_macd)
plot(higher_tf_signal, title="Signal", color=col_signal)

